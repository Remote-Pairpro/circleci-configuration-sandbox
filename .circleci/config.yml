version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers
    steps:
      - checkout
      - run:
          name: 開始通知
          command: |
            ./.circleci/send_success_message_to_slack.sh -v 'CircleCIでのビルドを開始します。' -t '開始通知'
      - run:
          name: テスト＆ビルド
          command: echo 'テストとビルドをやりました。'
  deploy_develop:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - deploy:
          name: デプロイ
          command: echo 'デプロイをしました。'
      - run:
          name: デプロイ成功通知
          command: |
            ./.circleci/send_success_message_to_slack.sh -v 'CircleCIデプロイが成功しました。' -t 'デプロイ成功通知'
  build_register:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: バイナリビルド
          command: |
            mkdir -p ./build/libs
            echo 'バイナリのつもり' > build/libs/tess-sample.jar
      - run:
          name: リポジトリデプロイ
          command: echo 'インハウスリポジトリやS3など「バイナリの置き場」に配置しました。'
      - run:
          name: Tagビルド&リポジトリ登録 成功通知
          command: |
            git_url="https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            ./.circleci/send_success_message_to_slack.sh -v "CircleCIデプロイが成功しました。\nTag: ${CIRCLE_TAG}\nSource: ${git_url}/tree/${CIRCLE_TAG}\nLastCommit: ${git_url}/commit/${CIRCLE_SHA1}" -t 'ビルド&リポジトリ登録 成功通知'
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy_develop:
          requires:
            - build
          filters:
            branches:
              only: master
      - build_register:
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
